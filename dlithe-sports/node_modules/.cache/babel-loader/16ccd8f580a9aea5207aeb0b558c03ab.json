{"ast":null,"code":"var _jsxFileName = \"D:\\\\Course backups\\\\Java\\\\DLitheBootcampJan2022\\\\ReactAndSpringBoot\\\\POC2\\\\dlithe-sports\\\\src\\\\Athlets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { collecting, letGet } from \"./Bridge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Athlets = () => {\n  _s();\n\n  const {\n    position\n  } = useParams();\n  const [tournament, setTournament] = useState({\n    \"tournamentId\": 0,\n    \"name\": \"\",\n    \"startDate\": \"\",\n    \"venue\": \"\",\n    \"price\": 0,\n    \"participants\": []\n  });\n  useEffect(() => {\n    gather();\n  }, []);\n\n  const gather = async () => {\n    const t = await collecting();\n    setTournament(t.data[position]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: tournament.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        alert(JSON.stringify(tournament));\n        tournament.participants.map((people, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: JSON.stringify(tournament.participants[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this));\n      },\n      children: \"hai\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Athlets, \"QzYG9/BEAHfkYRrVmp7sPSMWzfE=\", false, function () {\n  return [useParams];\n});\n\n_c = Athlets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Athlets\");","map":{"version":3,"sources":["D:/Course backups/Java/DLitheBootcampJan2022/ReactAndSpringBoot/POC2/dlithe-sports/src/Athlets.js"],"names":["React","useEffect","useState","useParams","collecting","letGet","Athlets","position","tournament","setTournament","gather","t","data","name","alert","JSON","stringify","participants","map","people","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,UAAnC;;;AAEA,OAAO,MAAMC,OAAO,GAAC,MAAI;AAAA;;AACrB,QAAK;AAACC,IAAAA;AAAD,MAAWJ,SAAS,EAAzB;AACA,QAAM,CAACK,UAAD,EAAYC,aAAZ,IAA2BP,QAAQ,CAAC;AACtC,oBAAe,CADuB;AAEtC,YAAO,EAF+B;AAGtC,iBAAY,EAH0B;AAItC,aAAQ,EAJ8B;AAKtC,aAAQ,CAL8B;AAMtC,oBAAe;AANuB,GAAD,CAAzC;AAQAD,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,MAAM;AACT,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMA,MAAM,GAAC,YAAS;AAClB,UAAMC,CAAC,GAAG,MAAMP,UAAU,EAA1B;AACAK,IAAAA,aAAa,CAACE,CAAC,CAACC,IAAF,CAAOL,QAAP,CAAD,CAAb;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA,gBAAIC,UAAU,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAI;AACjBC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeR,UAAf,CAAD,CAAL;AACAA,QAAAA,UAAU,CAACS,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,MAAD,EAAQC,KAAR,kBACxB;AAAA,oBAAIL,IAAI,CAACC,SAAL,CAAeR,UAAU,CAACS,YAAX,CAAwBG,KAAxB,CAAf;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAaH,CAhCM;;GAAMd,O;UACOH,S;;;KADPG,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { collecting, letGet } from \"./Bridge\";\r\n\r\nexport const Athlets=()=>{\r\n    const{position}=useParams()\r\n    const [tournament,setTournament]=useState({\r\n        \"tournamentId\":0,\r\n        \"name\":\"\",\r\n        \"startDate\":\"\",\r\n        \"venue\":\"\",\r\n        \"price\":0,\r\n        \"participants\":[]\r\n    })\r\n    useEffect(()=>{\r\n        gather()\r\n    },[])\r\n\r\n    const gather=async()=>{\r\n        const t = await collecting()\r\n        setTournament(t.data[position])\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <p>{tournament.name}</p>\r\n            <button onClick={()=>{\r\n                alert(JSON.stringify(tournament))\r\n                tournament.participants.map((people,index)=>(\r\n                    <p>{JSON.stringify(tournament.participants[index])}</p>\r\n                ))\r\n            }}>\r\n                hai\r\n            </button>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}